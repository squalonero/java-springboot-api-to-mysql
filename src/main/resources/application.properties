# Tomcat settings
server.port=8081

# MONGODB CONNECTION SETTINGS
# spring.data.mongodb.host=[host]
# spring.data.mongodb.port=[port]
# spring.data.mongodb.username=[username]
# spring.data.mongodb.password=[password]
# spring.data.mongodb.database=[database_name]
# logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG


spring.data.mongodb.uri=mongodb://localhost:27017
spring.data.mongodb.database=springbooks
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG


# ===============================
# = MYSQL
# ===============================

spring.datasource.url=jdbc:mysql://localhost:3306/java_spring?useSSL=false
spring.datasource.username=root
spring.datasource.password=

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect